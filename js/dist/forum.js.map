{"version":3,"file":"forum.js","mappings":"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","sources":["webpack://@fof/ignore-users/webpack/bootstrap","webpack://@fof/ignore-users/webpack/runtime/compat get default export","webpack://@fof/ignore-users/webpack/runtime/define property getters","webpack://@fof/ignore-users/webpack/runtime/hasOwnProperty shorthand","webpack://@fof/ignore-users/webpack/runtime/make namespace object","webpack://@fof/ignore-users/external root \"flarum.core.compat['forum/app']\"","webpack://@fof/ignore-users/external root \"flarum.core.compat['common/extend']\"","webpack://@fof/ignore-users/external root \"flarum.core.compat['forum/utils/UserControls']\"","webpack://@fof/ignore-users/external root \"flarum.core.compat['common/components/Button']\"","webpack://@fof/ignore-users/external root \"flarum.core.compat['forum/components/CommentPost']\"","webpack://@fof/ignore-users/external root \"flarum.core.compat['common/components/LinkButton']\"","webpack://@fof/ignore-users/external root \"flarum.core.compat['forum/components/UserPage']\"","webpack://@fof/ignore-users/external root \"flarum.core.compat['common/models/Discussion']\"","webpack://@fof/ignore-users/external root \"flarum.core.compat['common/models/User']\"","webpack://@fof/ignore-users/external root \"flarum.core.compat['common/components/Badge']\"","webpack://@fof/ignore-users/external root \"flarum.core.compat['common/extenders']\"","webpack://@fof/ignore-users/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@fof/ignore-users/external root \"flarum.core.compat['common/helpers/avatar']\"","webpack://@fof/ignore-users/external root \"flarum.core.compat['common/helpers/username']\"","webpack://@fof/ignore-users/external root \"flarum.core.compat['common/utils/Stream']\"","webpack://@fof/ignore-users/external root \"flarum.core.compat['common/components/Placeholder']\"","webpack://@fof/ignore-users/external root \"flarum.core.compat['common/components/LoadingIndicator']\"","webpack://@fof/ignore-users/./src/forum/components/ProfilePage.js","webpack://@fof/ignore-users/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@fof/ignore-users/./src/forum/extend.ts","webpack://@fof/ignore-users/./src/forum/index.ts","webpack://@fof/ignore-users/./src/forum/addIgnoreUserControlButton.js","webpack://@fof/ignore-users/./src/forum/addHideIgnoredPost.js","webpack://@fof/ignore-users/./src/forum/addProfilePage.js","webpack://@fof/ignore-users/./src/forum/addIgnoredUserBadge.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/utils/UserControls'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Button'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/CommentPost'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/LinkButton'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/UserPage'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/models/Discussion'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/models/User'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Badge'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extenders'];","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/avatar'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/username'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/Stream'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Placeholder'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/LoadingIndicator'];","import app from 'flarum/forum/app';\nimport avatar from 'flarum/common/helpers/avatar';\nimport Button from 'flarum/common/components/Button';\nimport username from 'flarum/common/helpers/username';\nimport UserPage from 'flarum/forum/components/UserPage';\nimport Stream from 'flarum/common/utils/Stream';\nimport Placeholder from 'flarum/common/components/Placeholder';\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\n\nexport default class ProfilePage extends UserPage {\n  oninit(vdom) {\n    super.oninit(vdom);\n\n    this.loading = true;\n\n    this.ignoredUsers = app.session.user.ignoredUsers();\n\n    this.loadUser(app.session.user.username());\n\n    this.loading = false;\n  }\n\n  content() {\n    if (this.loading) {\n      return (\n        <div className=\"DiscussionList\">\n          <LoadingIndicator />\n        </div>\n      );\n    }\n\n    if (this.ignoredUsers.length === 0) {\n      return (\n        <div className=\"DiscussionList\">\n          <Placeholder text={app.translator.trans('fof-ignore-users.forum.profile_page.no_ignored')} />\n        </div>\n      );\n    }\n\n    return (\n      <table className=\"NotificationGrid\">\n        {this.ignoredUsers.map((user, i) => {\n          var unignore = () => {\n            if (confirm(app.translator.trans(`fof-ignore-users.forum.user_controls.unignore_confirmation`))) {\n              user.save({ ignored: false });\n              this.ignoredUsers.splice(i, 1);\n              app.session.user.ignoredUsers = Stream(this.ignoredUsers);\n            }\n          };\n\n          return (\n            <tr>\n              <td>\n                <a href={app.route.user(user)} config={m.route}>\n                  <h3>\n                    {avatar(user, { className: 'ignorePage-avatar' })} {username(user)}\n                  </h3>\n                </a>\n              </td>\n              <td className=\"ignorePage-button\">\n                {Button.component(\n                  {\n                    icon: 'fas fa-comment',\n                    type: 'button',\n                    className: 'Button Button--warning',\n                    onclick: unignore.bind(user),\n                  },\n                  app.translator.trans('fof-ignore-users.forum.user_controls.unignore_button')\n                )}\n              </td>\n            </tr>\n          );\n        })}\n      </table>\n    );\n  }\n\n  show(user) {\n    this.user = app.session.user;\n\n    m.redraw();\n  }\n}\n","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","import Extend from 'flarum/common/extenders';\nimport User from 'flarum/common/models/User';\nimport ProfilePage from './components/ProfilePage';\n\nexport default [\n  new Extend.Model(User).attribute<boolean>('ignored').hasMany<User>('ignoredUsers').attribute<boolean>('canBeIgnored'),\n\n  new Extend.Routes().add('user.ignoredUsers', '/ignoredUsers', ProfilePage),\n];\n","import app from 'flarum/forum/app';\nimport addIgnoreUserControlButton from './addIgnoreUserControlButton';\nimport addHideIgnoredPost from './addHideIgnoredPost';\nimport addProfilePage from './addProfilePage';\nimport addIgnoredUserBadge from './addIgnoredUserBadge';\n\nexport { default as extend } from './extend';\n\napp.initializers.add('fof-ignore-users', function () {\n  addIgnoreUserControlButton();\n  addHideIgnoredPost();\n  addProfilePage();\n  addIgnoredUserBadge();\n});\n","import app from 'flarum/forum/app';\nimport { extend } from 'flarum/common/extend';\nimport UserControls from 'flarum/forum/utils/UserControls';\nimport Button from 'flarum/common/components/Button';\n\nexport default function () {\n  extend(UserControls, 'userControls', function (items, user) {\n    if (app.session.user === user || !app.session.user || !user.canBeIgnored()) {\n      return;\n    }\n\n    function unignore() {\n      if (confirm(app.translator.trans(`fof-ignore-users.forum.user_controls.unignore_confirmation`))) {\n        this.save({ ignored: false });\n      }\n    }\n\n    function ignore() {\n      if (confirm(app.translator.trans(`fof-ignore-users.forum.user_controls.ignore_confirmation`))) {\n        this.save({ ignored: true });\n      }\n    }\n\n    if (user.ignored()) {\n      items.add(\n        'unignore',\n        <Button icon=\"fas fa-comment\" onclick={unignore.bind(user)}>\n          {app.translator.trans('fof-ignore-users.forum.user_controls.unignore_button')}\n        </Button>\n      );\n    } else {\n      items.add(\n        'ignore',\n        <Button icon=\"fas fa-comment-slash\" onclick={ignore.bind(user)}>\n          {app.translator.trans('fof-ignore-users.forum.user_controls.ignore_button')}\n        </Button>\n      );\n    }\n  });\n}\n","import { extend } from 'flarum/common/extend';\nimport UserControls from 'flarum/forum/utils/UserControls';\nimport CommentPost from 'flarum/forum/components/CommentPost';\nimport Button from 'flarum/common/components/Button';\n\nexport default function () {\n  extend(CommentPost.prototype, 'elementAttrs', function (elementAttrs) {\n    const user = this.attrs.post.user();\n    const ignored = user && user.ignored();\n    if (ignored) {\n      elementAttrs.className += ' Post--hidden';\n    }\n    return elementAttrs;\n  });\n\n  extend(CommentPost.prototype, 'headerItems', function (items) {\n    const post = this.attrs.post;\n\n    if (post.isHidden() || !(post.user() && post.user().ignored())) {\n      return;\n    }\n\n    items.add(\n      'ignore-toggle',\n      Button.component({\n        className: 'Button Button--default Button--more',\n        icon: 'fas fa-ellipsis-h',\n        onclick: this.toggleContent.bind(this),\n      })\n    );\n  });\n}\n","import { extend } from 'flarum/common/extend';\nimport app from 'flarum/forum/app';\nimport LinkButton from 'flarum/common/components/LinkButton';\nimport UserPage from 'flarum/forum/components/UserPage';\n\nexport default function () {\n  extend(UserPage.prototype, 'navItems', function (items) {\n    if (app.session.user && app.session.user === this.user)\n      items.add(\n        'ignored-users',\n        <LinkButton href={app.route('user.ignoredUsers')} icon=\"fas fa-user-slash\">\n          {app.translator.trans('fof-ignore-users.forum.profile_link')}\n        </LinkButton>\n      );\n  });\n}\n","import app from 'flarum/forum/app';\nimport { extend } from 'flarum/common/extend';\nimport Discussion from 'flarum/common/models/Discussion';\nimport User from 'flarum/common/models/User';\nimport Badge from 'flarum/common/components/Badge';\n\nexport default function addSubscriptionBadge() {\n  extend(Discussion.prototype, 'badges', function (badges) {\n    let badge;\n\n    if (this.user() && this.user().ignored()) {\n      badge = Badge.component({\n        label: app.translator.trans('fof-ignore-users.forum.badge.discussion_label'),\n        icon: 'fas fa-user-slash',\n        type: 'ignored',\n      });\n    }\n\n    if (badge) {\n      badges.add('user-discussion-ignored', badge);\n    }\n  });\n\n  extend(User.prototype, 'badges', function (badges) {\n    let badge;\n\n    if (this.ignored()) {\n      badge = Badge.component({\n        label: app.translator.trans('fof-ignore-users.forum.badge.user_label'),\n        icon: 'fas fa-user-slash',\n        type: 'ignored',\n      });\n    }\n\n    if (badge) {\n      badges.add('user-ignored', badge);\n    }\n  });\n}\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","core","compat","_setPrototypeOf","p","setPrototypeOf","__proto__","ProfilePage","subClass","superClass","create","constructor","oninit","vdom","this","loading","ignoredUsers","app","loadUser","content","className","length","text","map","user","i","href","config","m","route","avatar","username","Button","icon","type","onclick","confirm","save","ignored","splice","Stream","bind","show","redraw","UserPage","Extend","User","attribute","hasMany","add","extend","UserControls","items","canBeIgnored","CommentPost","elementAttrs","attrs","post","isHidden","toggleContent","Discussion","badges","badge","Badge","label"],"sourceRoot":""}